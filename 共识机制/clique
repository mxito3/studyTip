主要设计方法
	1.投票机制：
		默认新加入的节点没有确认交易的权利，只有同步数据的权利，新加入的节点想要获得记账权利得发起一个请求(可由认证节点发起)若网络中超过一半的节点
    同意则允许加入，该节点成为一个signer.踢出也是同样的道理。

		加入投票：
			clique.propose(address,true)
		踢出投票
			clique.propose(address,flase)
	2.机会均等
		
		每个认证节点在连续的signer_limit个区块中最多只能签发一个区块，也就是说每一轮有total_signer-
		signer_limit个节点在确认区块,其中
			signer_limit=floor(total_signer/2)+1；
		这就保证了在全网诚实节点的数量(signer_limit)大于全网节点的一半的时候，每个节点在signer_limit个区块内只能签发一个块，恶意节点无法控制整个网络。

	3.inturn避免分叉

		inturn节点的意思就是在一个块挖出来之前就已经确定了哪个signer有较大可能获得签发权，inturn节点签发时难度值大，非inturn节点签发的难度值小，然而，
    inturn节点的区块早于非inturn节点广播，这使得难度值较大的节点被连到已有的链上的可能性大，从而主链积累的算力值越高来避免分叉。

	4.避免恶意节点连续发起多个投票信息

		采用checkpoint机制,每隔一个epoch将所有的投票信息存进区块，避免维护节点产生的内存开销。同时使得后续新加入的节点不必从头重放投票过程来生成节点地
    址列表，而直接通过checkpoint的区块获取完整的认证节点地址（例如fast sync）
